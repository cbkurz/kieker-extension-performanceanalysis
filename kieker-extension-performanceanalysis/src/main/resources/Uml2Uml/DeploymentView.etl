@lazy
rule Artifact
    transform art1 : UML!Artifact
    to art2 : FUML!Artifact {
    	
		art2.name = art1.name;
		
		var manifest1 = art1.getManifestations().first;
		var comp2 = getComponent(manifest1.getSuppliers().first.name);
		art2.createManifestation(manifest1.name, comp2);
		applyStereotype(art1, art2);
	}

@lazy
rule Node
    transform node1 : UML!Node
    to node2 : FUML!Node {
    	
		node2.name = node1.name;
		
		var deployment1 = node1.getDeployments().first;
		var deployment2 = node2.createDeployment(deployment1.name);
		for (a1 in deployment1.getDeployedArtifacts()) {
			var a2 = getArtifact(deploymentView2, a1.name);
			deployment2.getDeployedArtifacts().add(a2);
		}
		applyStereotype(node1, node2);
	}
	
@lazy
rule Manifestation
    transform elem1 : UML!Manifestation
    to elem2 : FUML!Manifestation {
    	
    	// generic conversion
		elem1.convertToFutureModel(elem2);
	}


