@namespace(uri="kieker.extension.umltransformation", prefix="umlTransform")
package kieker.extension.umltransformation;

datatype BigDecimal : java.math.BigDecimal;

class Transformation {
	attr String[1] name;
	attr String[+] umlUseCases; // This requires the Names of the UML Use-Cases that are included in the transformation.
	val TransformationRule[+] transformationRules; // This represents the rules that are applied to the elements in question
	val Requirement[*] requirement;
}

abstract class TransformationRule {
	attr String[1] name;
}

abstract class Requirement {
	attr String[1] name;
}

// Transformations
class NullTransformation extends TransformationRule { // This Transformation does not change the model in any way.
}

class IncreaseMessageTime extends TransformationRule { // This Transformation adds time to a Message within an interaction
	attr String[+] messageName;
	attr Integer[1] time;
}


// The value for this rule is already in the model	and will be applied if this rule is modeled
class ApplyOpenWorkload extends TransformationRule {
	attr String[*] useCases; // if no use-cases are given the rule is only applied to the all
}

class SetCustomWorkload extends ApplyOpenWorkload {
	attr String workloadType; // open or closed
	attr BigDecimal value; 
}