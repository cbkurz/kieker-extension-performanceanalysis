[% import "Operations.eol"; %]
@startuml

[%=getStandardInformation()%]

title
[%="    Use case: " + interaction.getOwner().name + " - " + interaction.name%]
end title

[% for (l in interaction.lifelines) { %]
participant [%=sanitize(l.name)%] [
    =[%=l.name%]
    ----
[% if ("'Entry'".equals(l.name)) { %]
    << Actor >>
[% } %]
[%=l.assembleStereotypeTemplateString(4)%]
] 
[% } %]

autonumber
[%
    var entryLf = interaction.getLifeline("'Entry'");
    var entryBes = entryLf.coveredBy.selectOne(f | f.isTypeOf(UML!BehaviorExecutionSpecification));
%]
activate [%=sanitize(entryLf.name)%]
note over [%=sanitize(entryLf.name)%]
[%=entryBes.assembleStereotypeTemplateString(4)%]
end note


[% for (m in interaction.messages) { %]
[%=m.getSenderName()%] [%=m.getMessageType()%] [%=m.getReceiverName()%] : [%=m.name%]
[% 
    if (m.getMessageSort() == UML!MessageSort#synchCall) {
        // get receiver lifeline
        var lifeline = m.receiveEvent.covered.first;
        // Gets the BESes from the lifeline that is covered by the message
        var targetBeses = lifeline.getElements("BehaviorExecutionSpecification");
        // Gets the BES that is the one that the message targets
        var bes = targetBeses.selectOne(b | b.getStart().equals(m.getReceiveEvent()));
%]
note over [%=sanitize(lifeline.name)%]
[%=bes.assembleStereotypeTemplateString(4)%]
end note
[%  } %]
[%=m.getActivation()%]
[% } %]
deactivate [%=sanitize("'Entry'")%]

@enduml