<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<lqn-model name="FutureModel">
  <solver-params comment=""/>
  <processor multiplicity="1" name="Zenbook-Flip-14">
        
    <task multiplicity="1" name="public static main(java.lang.String[]):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Main6Full.public static main(java.lang.String[]):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="2740200.0" name="BES-kurz.ma.examples.simple.Main6Full.public static main(java.lang.String[]):void" phase="1">
                        
            <synch-call calls-mean="1.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Loop.public &lt;init&gt;()"/>
                        
            <synch-call calls-mean="2.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Loop.public loop6(int,int):void"/>
                        
            <synch-call calls-mean="1.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Recursion.public &lt;init&gt;()"/>
                        
            <synch-call calls-mean="3.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Recursion.public recursion(int,int):void"/>
                        
            <synch-call calls-mean="2.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Worker.public static work6(int):void"/>
                        
            <synch-call calls-mean="1.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Loop.public loop(int,int):void"/>
                      
          </activity>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public Loop()">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Loop.public &lt;init&gt;()" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="6028.571428571428" name="BES-kurz.ma.examples.simple.Loop.public &lt;init&gt;()" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public loop6(int,int):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Loop.public loop6(int,int):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="218228.57142857142" name="BES-kurz.ma.examples.simple.Loop.public loop6(int,int):void" phase="1">
                        
            <synch-call calls-mean="5.0" dest="Interaction-0_BES-kurz.ma.examples.simple.Loop.private waitIfElse(int):void"/>
                      
          </activity>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="private waitIfElse(int):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Loop.private waitIfElse(int):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="2.6031651428571433E7" name="BES-kurz.ma.examples.simple.Loop.private waitIfElse(int):void" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public loop(int,int):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Loop.public loop(int,int):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="1.0265802857142857E8" name="BES-kurz.ma.examples.simple.Loop.public loop(int,int):void" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public Recursion()">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Recursion.public &lt;init&gt;()" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="3185.714285714286" name="BES-kurz.ma.examples.simple.Recursion.public &lt;init&gt;()" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public recursion(int,int):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Recursion.public recursion(int,int):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="1.3834241904761904E8" name="BES-kurz.ma.examples.simple.Recursion.public recursion(int,int):void" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
        
    <task multiplicity="1" name="public static work6(int):void">
            
      <entry name="Interaction-0_BES-kurz.ma.examples.simple.Worker.public static work6(int):void" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="1.1542023571428572E8" name="BES-kurz.ma.examples.simple.Worker.public static work6(int):void" phase="1"/>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
      
  </processor>
  <processor name="'Entry'-SimpleExample-0">
        
    <task name="SimpleExample-0_job_class_">
            
      <entry name="Interaction-0_BES-'Entry'.'Entry'():&lt;&gt;" open-arrival-rate="0.00000000072933532546" type="PH1PH2">
                
        <entry-phase-activities>
                    
          <activity host-demand-mean="1.0" name="BES-'Entry'.'Entry'():&lt;&gt;" phase="1">
                        
            <synch-call calls-mean="1" dest="Interaction-0_BES-kurz.ma.examples.simple.Main6Full.public static main(java.lang.String[]):void"/>
                      
          </activity>
                  
        </entry-phase-activities>
              
      </entry>
          
    </task>
      
  </processor>
</lqn-model>
