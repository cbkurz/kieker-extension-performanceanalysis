@startuml

' This is a PlantUML diagram.
' Information on the notation can be found here: https://plantuml.com
' An Editor, that allows to create diagrams, is here: https://www.plantuml.com/plantuml/uml/ 

title Interaction-0

participant _Entry_ [
    ='Entry'
    ----
    << Actor >>
    << GaWorkloadEvent >>
    pattern: closed:1
] 
participant kurz.ma.examples.simple.Main6Full [
    =kurz.ma.examples.simple.Main6Full
    ----

] 
participant kurz.ma.examples.simple.Loop [
    =kurz.ma.examples.simple.Loop
    ----

] 
participant kurz.ma.examples.simple.Recursion [
    =kurz.ma.examples.simple.Recursion
    ----

] 
participant kurz.ma.examples.simple.Worker [
    =kurz.ma.examples.simple.Worker
    ----

] 

autonumber

_Entry_ -> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
note over kurz.ma.examples.simple.Main6Full
    << GaStep >>
    execTimeEntries: 1.75977E7,322700.0,274700.0,267700.0,238500.0,223900.0,256200.0
    execTime: 2740200.0
    rep: 1
end note
activate kurz.ma.examples.simple.Main6Full
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Loop : public Loop()
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 11000.0,6100.0,6200.0,4900.0,5200.0,4800.0,4000.0
    execTime: 6028.571428571428
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Loop : public loop6(int,int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 209200.0,278900.0,277100.0,137700.0,180500.0,159000.0,214000.0
    execTime: 208057.14285714287
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 6.09674E7,5.97369E7,6.01003E7,6.07242E7,6.04867E7,6.07651E7,6.07056E7
    execTime: 6.0498028571428575E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 2.00024E7,2.04971E7,2.08132E7,2.03848E7,2.0656E7,2.01552E7,2.05766E7
    execTime: 2.044075714285714E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 6.00032E7,6.04209E7,6.0715E7,6.00804E7,6.05989E7,6.07164E7,6.00485E7
    execTime: 6.036904285714286E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 2.04514E7,2.02098E7,2.08772E7,2.07566E7,1.99631E7,2.04318E7,2.06576E7
    execTime: 2.0478214285714287E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Recursion : public Recursion()
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 8200.0,3100.0,3100.0,1700.0,3000.0,1700.0,1500.0
    execTime: 3185.714285714286
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 5.04874E7,5.0854E7,5.08382E7,5.0093E7,5.07699E7,5.01734E7,5.07542E7
    execTime: 5.056715714285714E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 5.0107E7,5.08405E7,5.09359E7,5.0184E7,5.0477E7,5.02888E7,5.02841E7
    execTime: 5.0445328571428575E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 5.07378E7,5.0373E7,5.03254E7,5.03558E7,5.05443E7,5.05455E7,5.02819E7
    execTime: 5.045195714285714E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 16700.0,25400.0,19900.0,9200.0,15000.0,8400.0,7300.0
    execTime: 14557.142857142857
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 1.99781E7,2.005E7,2.01101E7,2.03494E7,2.02092E7,2.0347E7,2.0017E7
    execTime: 2.015154285714286E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 2.09755E7,2.06144E7,2.1615E7,2.0353E7,2.0699E7,2.08641E7,2.1042E7
    execTime: 2.088042857142857E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 4400.0,12600.0,44100.0,5200.0,13100.0,3700.0,7400.0
    execTime: 12928.57142857143
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Loop : public loop6(int,int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 93800.0,435900.0,290200.0,160900.0,278100.0,163500.0,176400.0
    execTime: 228400.0
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 2.41616E7,2.40497E7,2.46575E7,2.41923E7,2.47145E7,2.45385E7,2.39567E7
    execTime: 2.43244E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 8236500.0,8398500.0,9377600.0,8509900.0,8374200.0,8000100.0,7940400.0
    execTime: 8405314.285714285
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 2.48546E7,2.43084E7,2.41834E7,2.49154E7,2.45949E7,2.41332E7,2.40101E7
    execTime: 2.442857142857143E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 8360000.0,8930400.0,8819100.0,8014900.0,8466100.0,7937100.0,7975200.0
    execTime: 8357542.857142857
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 2.40749E7,2.40874E7,2.48671E7,2.47163E7,2.40185E7,2.47472E7,2.44996E7
    execTime: 2.443014285714286E7
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop -> kurz.ma.examples.simple.Loop : private waitIfElse(int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 8076700.0,8862300.0,8348400.0,9084200.0,8744500.0,8469300.0,8506100.0
    execTime: 8584500.0
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Loop : public loop6(int,int):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Worker : public static work6(int):void
note over kurz.ma.examples.simple.Worker
    << GaStep >>
    execTimeEntries: 1.289503E8,1.299287E8,1.303291E8,1.301263E8,1.309103E8,1.30115E8,1.300818E8
    execTime: 1.3006307142857143E8
    rep: 1
end note
activate kurz.ma.examples.simple.Worker
kurz.ma.examples.simple.Worker --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Worker
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Loop : public loop(int,int):void
note over kurz.ma.examples.simple.Loop
    << GaStep >>
    execTimeEntries: 1.005968E8,1.02121E8,1.015923E8,1.026401E8,1.044887E8,1.042548E8,1.029125E8
    execTime: 1.0265802857142857E8
    rep: 1
end note
activate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Loop --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Loop
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 3.04873E7,3.02066E7,3.03611E7,3.08984E7,3.0387E7,3.00751E7,3.08101E7
    execTime: 3.04608E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 3.05227E7,3.05922E7,3.05403E7,3.05287E7,3.03996E7,3.05977E7,3.03687E7
    execTime: 3.050712857142857E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 3.05486E7,3.00481E7,3.0686E7,3.05335E7,3.01393E7,3.02961E7,3.04546E7
    execTime: 3.03866E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 3.00551E7,3.05098E7,3.06732E7,3.06402E7,3.03433E7,3.04193E7,3.06155E7
    execTime: 3.04652E7
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion -> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
note over kurz.ma.examples.simple.Recursion
    << GaStep >>
    execTimeEntries: 9800.0,10300.0,7300.0,10900.0,8700.0,115600.0,6100.0
    execTime: 24100.0
    rep: 1
end note
activate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Recursion : public recursion(int,int):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Recursion --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Recursion
kurz.ma.examples.simple.Main6Full -> kurz.ma.examples.simple.Worker : public static work6(int):void
note over kurz.ma.examples.simple.Worker
    << GaStep >>
    execTimeEntries: 1.002563E8,1.010494E8,1.004984E8,1.013991E8,1.009032E8,1.003243E8,1.010111E8
    execTime: 1.007774E8
    rep: 1
end note
activate kurz.ma.examples.simple.Worker
kurz.ma.examples.simple.Worker --> kurz.ma.examples.simple.Main6Full : public static main(java.lang.String[]):void
deactivate kurz.ma.examples.simple.Worker
kurz.ma.examples.simple.Main6Full --> _Entry_ : 'Entry'():<>
deactivate kurz.ma.examples.simple.Main6Full




@enduml